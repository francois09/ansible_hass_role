upstream zigbee {
  server zigbee.tourde.home:8080;
}

server {
  listen {% if hass__zigbee_use_ssl %}443 ssl{% else %}80{% endif %};
  server_name {{ hass__zigbee_hostname }};

{% if hass__webserver_timeouts is defined %}
{% for k,v in hass__webserver_timeouts.items() %}
  proxy_{{ k }}_timeout {{ v }};
{% endfor %}
{% endif %}
{% if hass__zigbee_use_ssl %}
  ssl_certificate {{ hass__zigbee_ssl_cert }};
  ssl_certificate_key {{ hass__zigbee_ssl_key }};
{% endif %}
   # For SSL checks
   location /.well-known/ {
     alias /var/www/html/zigbee/.well-known/;
   }


  location /api {
    proxy_pass http://zigbee;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }

  location / {
    allow 0.0.0.0/0;
    deny all;
    proxy_pass http://zigbee;

    # auth_basic "Restricted access";
    # auth_basic_user_file /etc/nginx/htpasswd_zigbee;
  }

  access_log /var/log/nginx/zigbee-http{% if hass__zigbee_use_ssl %}s{% endif %}.access.log;
  error_log /var/log/nginx/zigbee-http{% if hass__zigbee_use_ssl %}s{% endif %}.error.log;
}
{% if hass__zigbee_use_ssl %}

server {
  listen 80;
  server_name {{ hass__zigbee_hostname }};

  if ($host = {{ hass__zigbee_hostname }}) {
    return 301 https://$host$request_uri;
  }

  # For SSL check
  location /.well-known/ {
    alias /var/www/html/zigbee/.well-known/;
  }

  return 404;

  access_log /var/log/nginx/zigbee-http.access.log;
  error_log /var/log/nginx/zigbee-http.error.log;
}
{% endif %}
